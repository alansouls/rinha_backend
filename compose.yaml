services:
  rinhabackend.migrations:
    image: rinhabackend.migrations
    networks:
      - backend
    build:
      context: .
      dockerfile: RinhaBackend.Migrations/Dockerfile
      
  nginx:
    image: nginx-loadbalancer
    platform: "linux/amd64"
    depends_on:
      - rinhabackend.api1
      - rinhabackend.api2
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"
    networks:
      - frontdoor
      - backend
    build:
      context: ./infra/nginx
      dockerfile: Dockerfile
    ports:
      - "9999:80"

  rinhabackend.api1:
    image: rinhabackend.api
    depends_on:
      - rinhabackend.migrations
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"
    networks:
      - backend
    build:
      context: .
      dockerfile: RinhaBackend.Api/Dockerfile

  rinhabackend.api2:
    image: rinhabackend.api
    depends_on:
      - rinhabackend.migrations
      - rabbitmq
    platform: "linux/amd64"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "50MB"
    networks:
      - backend
    build:
      context: .
      dockerfile: RinhaBackend.Api/Dockerfile

  rinhabackend.worker:
    image: rinhabackend.worker
    depends_on:
      - rinhabackend.migrations
      - rabbitmq
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "150MB"
    networks:
      - backend
      - payment-processor
    build:
      context: .
      dockerfile: RinhaBackend.Worker/Dockerfile
        
  rabbitmq:
    image: rabbitmq:3-management
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
    networks:
      - backend
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
  
  postgres:
    image: postgres:latest
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "100MB"
    networks:
      - frontdoor
      - backend
    container_name: postgres
    environment:
        POSTGRES_USER: rinha
        POSTGRES_PASSWORD: rinha
        POSTGRES_DB: rinha
    ports:
      - "5433:5432"

networks:
  frontdoor:
    # Specify driver options
    driver: bridge
  backend:
    # Specify driver options
    driver: bridge
  payment-processor:
      external: true

